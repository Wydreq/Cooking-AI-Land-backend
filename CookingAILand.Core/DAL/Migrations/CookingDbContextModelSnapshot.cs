// <auto-generated />
using System;
using CookingAILand.Core.DAL.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookingAILand.Migrations
{
    [DbContext(typeof(CookingDbContext))]
    partial class CookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Cookbook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedById1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById1");

                    b.ToTable("Cookbooks");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Ingridient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingridient");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<int>("CookbookId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CookbookId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedById1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CookbookId1");

                    b.HasIndex("CreatedById1");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Cookbook", b =>
                {
                    b.HasOne("CookingAILand.Core.DAL.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Ingridient", b =>
                {
                    b.HasOne("CookingAILand.Core.DAL.Entities.Recipe", null)
                        .WithMany("Ingridients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Recipe", b =>
                {
                    b.HasOne("CookingAILand.Core.DAL.Entities.Cookbook", "Cookbook")
                        .WithMany("Recipes")
                        .HasForeignKey("CookbookId1");

                    b.HasOne("CookingAILand.Core.DAL.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cookbook");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Cookbook", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("CookingAILand.Core.DAL.Entities.Recipe", b =>
                {
                    b.Navigation("Ingridients");
                });
#pragma warning restore 612, 618
        }
    }
}
